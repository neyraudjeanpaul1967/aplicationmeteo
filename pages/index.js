/**
 * Page d'accueil principale de l'application m√©t√©o
 *
 * Cette page constitue le point d'entr√©e principal de l'application m√©t√©orologique.
 * Elle int√®gre tous les composants essentiels : interface m√©t√©o, gestion des favoris,
 * statut premium et interface d'achat Stripe.
 *
 * Fonctionnalit√©s principales :
 * - Affichage de l'interface m√©t√©o principale via le composant Hero
 * - Gestion du statut premium utilisateur avec PremiumStatus
 * - Interface d'achat premium avec int√©gration Stripe
 * - Gestion de l'authentification et redirection conditionnelle
 * - Interface responsive adapt√©e mobile et desktop
 *
 * Architecture des composants :
 * - Header : Navigation et authentification
 * - Hero : Interface m√©t√©o principale avec recherche et favoris
 * - PremiumStatus : Affichage du statut d'abonnement utilisateur
 * - Footer : Informations et liens secondaires
 *
 * Int√©grations :
 * - AuthContext : Gestion de l'√©tat d'authentification utilisateur
 * - Stripe API : Traitement des paiements premium via /api/chekout_sessions
 * - Next.js Head : M√©tadonn√©es SEO et configuration PWA
 *
 * S√©curit√© :
 * - V√©rification de l'authentification avant achat premium
 * - Timeout de requ√™te pour √©viter les blocages r√©seau
 * - Gestion d'erreurs compl√®te avec messages utilisateur explicites
 *
 * @author Jean-Paul
 * @version 1.0.0
 * @since 2025
 */

import Head from "next/head";
import Header from "../components/Header";
import Hero from "../components/Hero";
import Footer from "../components/Footer";
import PremiumStatus from "../components/PremiumStatus";
import { useState } from "react";
import { useAuth } from "../contexts/AuthContext";

/**
 * Composant principal de la page d'accueil
 *
 * G√®re l'affichage de l'interface m√©t√©o principale et l'achat premium.
 * Utilise le contexte d'authentification pour s√©curiser les achats.
 *
 * @returns {JSX.Element} Interface compl√®te de l'application m√©t√©o
 */
export default function Home() {
  // √âtat local pour g√©rer le loading pendant la redirection Stripe
  const [isLoading, setIsLoading] = useState(false);

  // R√©cup√©ration du contexte d'authentification pour v√©rifier l'utilisateur connect√©
  const { user, loading } = useAuth();

  /**
   * Gestionnaire d'achat premium
   *
   * Cette fonction g√®re le processus complet d'achat premium :
   * 1. V√©rification de l'authentification utilisateur
   * 2. Validation de l'√©tat de chargement
   * 3. Appel API pour cr√©er une session de paiement Stripe
   * 4. Redirection vers l'interface de paiement Stripe
   *
   * S√©curit√© :
   * - V√©rification obligatoire de l'authentification
   * - Timeout de 10 secondes pour √©viter les blocages
   * - Gestion d'erreurs compl√®te avec messages explicites
   *
   * Workflow :
   * - Si non connect√© ‚Üí redirection vers /auth/signin
   * - Si chargement ‚Üí attente et message utilisateur
   * - Si connect√© ‚Üí cr√©ation session Stripe et redirection
   *
   * @async
   * @function handlePurchase
   * @returns {Promise<void>} Promesse de redirection vers Stripe ou gestion d'erreur
   */
  const handlePurchase = async () => {
    // Logs de d√©bogage pour tracer le processus d'achat
    console.log("üöÄ Tentative d'achat premium");
    console.log("üìä Loading:", loading);
    console.log("üë§ User:", user);

    // V√©rification critique : utilisateur connect√© requis pour l'achat
    if (!user) {
      console.log("‚ùå Pas d'utilisateur d√©tect√©");
      alert("Vous devez √™tre connect√© pour acheter la version premium");
      // Redirection s√©curis√©e vers la page de connexion
      window.location.href = "/auth/signin";
      return;
    }

    // V√©rification de l'√©tat de chargement pour √©viter les requ√™tes simultan√©es
    if (loading) {
      console.log("‚è≥ Chargement de l'utilisateur en cours");
      alert("Chargement en cours, veuillez patienter...");
      return;
    }

    console.log("‚úÖ Utilisateur valide:", user.email);

    // Activation du loading pour feedback utilisateur pendant la requ√™te
    setIsLoading(true);

    try {
      console.log("üöÄ D√©but de la requ√™te API");

      // Configuration d'un timeout pour √©viter les blocages r√©seau
      const controller = new AbortController();
      const timeoutId = setTimeout(() => controller.abort(), 10000); // 10 secondes timeout

      // Appel API pour cr√©er une session de paiement Stripe
      const response = await fetch("/api/checkout_sessions", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          userId: user.id, // ID utilisateur pour l'identification
          userEmail: user.email, // Email pour la facturation Stripe
        }),
        signal: controller.signal, // Signal d'abort pour le timeout
      });

      // Nettoyage du timeout si la requ√™te aboutit
      clearTimeout(timeoutId);
      console.log("üì° R√©ponse API:", response.status, response.statusText);

      // V√©rification du statut de la r√©ponse HTTP
      if (!response.ok) {
        // Tentative de r√©cup√©ration des d√©tails d'erreur depuis l'API
        const errorData = await response
          .json()
          .catch(() => ({ error: "Erreur de r√©ponse" }));
        console.log("‚ùå Erreur API:", errorData);
        throw new Error(
          `Erreur ${response.status}: ${errorData.error || "Erreur inconnue"}`
        );
      }

      // Traitement de la r√©ponse r√©ussie
      const data = await response.json();
      console.log("‚úÖ Donn√©es re√ßues:", data);

      // Redirection vers l'interface de paiement Stripe
      if (data.url) {
        console.log("üîó Redirection vers Stripe:", data.url);
        window.location.href = data.url; // Redirection compl√®te vers Stripe
      } else {
        throw new Error("Aucune URL de redirection re√ßue");
      }
    } catch (error) {
      // Gestion compl√®te des erreurs avec messages utilisateur explicites
      console.error("‚ùå Erreur compl√®te:", error);

      // Gestion sp√©cifique des timeouts
      if (error.name === "AbortError") {
        alert("La requ√™te a pris trop de temps. Veuillez r√©essayer.");
      }
      // Gestion des erreurs de connectivit√©
      else if (error.message.includes("Failed to fetch")) {
        alert(
          "Probl√®me de connexion. V√©rifiez votre connexion internet ou d√©sactivez temporairement les extensions du navigateur."
        );
      }
      // Gestion des autres erreurs
      else {
        alert(
          `Erreur lors de la redirection vers le paiement: ${error.message}`
        );
      }
    } finally {
      // D√©sactivation du loading dans tous les cas (succ√®s ou erreur)
      setIsLoading(false);
    }
  };

  return (
    <>
      {/* Configuration SEO et m√©tadonn√©es de la page */}
      <Head>
        <title>La M√©t√©o de Jean-Paul</title>
        <meta
          name="description"
          content="Application m√©t√©o r√©alis√©e par Jean-Paul"
        />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* Container principal avec design responsive */}
      <div className="min-h-screen font-sans">
        {/* 
          Layout responsive avec breakpoints :
          - Mobile : w-[350px] (design fixe pour mobile)
          - Tablet : md:w-[98%] md:max-w-[980px] (responsive avec limite)
          - Desktop : lg:w-4/5 lg:max-w-[1200px] (responsive large)
          
          Glassmorphism effect sur desktop avec bg-fond-container
        */}
        <div className="w-[350px] mx-auto p-4 rounded-lg min-h-[98vh] md:w-[98%] md:max-w-[980px] md:my-5 md:p-5 md:bg-fond-container md:rounded-xl md:flex md:flex-col md:gap-5 lg:w-4/5 lg:max-w-[1200px] lg:my-8 lg:p-8 lg:gap-5">
          {/* Composant de navigation et authentification */}
          <Header />

          {/* Interface m√©t√©o principale avec recherche et favoris */}
          <Hero />

          {/* Affichage du statut premium utilisateur */}
          <PremiumStatus />

          {/* 
            Section d'achat premium avec int√©gration Stripe
            
            Cette section propose l'upgrade vers la version premium avec :
            - Description des fonctionnalit√©s premium
            - Prix affich√© clairement (9,99‚Ç¨)
            - Bouton d'achat avec gestion du loading
            - Design coh√©rent avec la charte graphique (bleu)
            
            S√©curit√© :
            - Bouton d√©sactiv√© pendant le loading pour √©viter les doubles clics
            - V√©rification d'authentification dans handlePurchase
            - Feedback visuel avec changement de texte pendant la redirection
          */}
          <div className="bg-blue-50 p-6 rounded-lg border border-blue-200 mt-6">
            <h2 className="text-xl font-bold text-blue-800 mb-4">
              Version Premium
            </h2>
            <p className="text-blue-600 mb-4">
              Acc√©dez √† des fonctionnalit√©s exclusives : pr√©visions √©tendues,
              alertes m√©t√©o personnalis√©es et plus de favoris !
            </p>
            <div className="flex items-center justify-between">
              {/* Prix affich√© de mani√®re pro√©minente */}
              <span className="text-2xl font-bold text-blue-800">9,99‚Ç¨</span>

              {/* 
                Bouton d'achat avec √©tats multiples :
                - Normal : "Acheter Premium"
                - Loading : "Redirection..." avec d√©sactivation
                - Hover : effet de transition couleur
                - Disabled : style att√©nu√© avec curseur interdit
              */}
              <button
                onClick={handlePurchase}
                disabled={isLoading}
                className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors disabled:bg-blue-400 disabled:cursor-not-allowed"
              >
                {isLoading ? "Redirection..." : "Acheter Premium"}
              </button>
            </div>
          </div>

          {/* Composant de pied de page avec informations secondaires */}
          <Footer />
        </div>
      </div>
    </>
  );
}
